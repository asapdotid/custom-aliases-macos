#!/bin/bash

local envFile=${1:-~/.config/.env}

if [ -f $envFile ]; then
  while IFS='=' read -r key temp || [ -n "$key" ]; do
    local isComment='^[[:space:]]*#'
    local isBlank='^[[:space:]]*$'
    [[ $key =~ $isComment ]] && continue
    [[ $key =~ $isBlank ]] && continue
    value=$(eval echo "$temp")
    eval export "$key='$value'";
  done < $envFile
else
  echo "No $envFile file found" 1>&2
fi

log() {
  echo -e "${NAMI_DEBUG:+${CYAN}${MODULE} ${MAGENTA}$(date "+%T.%2N ")}${RESET}${@}" >&2
}

info() {
  log "${GREEN}INFO ${RESET} ==> ${@}"
}

warn() {
  log "${YELLOW}WARN ${RESET} ==> ${@}"
}

error() {
  log "${RED}ERROR${RESET} ==> ${@}"
}

print_welcome_page() {
  if [ -z "$DISABLE_WELCOME_MESSAGE" ]; then
    if [ -n "$ASAP_APP_NAME" ]; then
      print_image_welcome_page
    fi
  fi
}

# Prints the welcome page for this Bitnami Docker image
print_image_welcome_page() {
  # log ""
  log "${BOLD}${RED}|>|>|>${RESET} ${GREEN}Welcome to the ${BOLD}${GREEN}${ASAP_APP_NAME}${RESET} ${GREEN}command${RESET} ${BOLD}${RED}<|<|<|${RESET}"
  # log "${BOLD}${RED}|>${RESET} ${GREEN}Terminal command on the MacOS Catalina${RESET}"
  # log ""
}

new_website_project() {
  if [[ ( $1 == "--help") ||  $1 == "-h" ]]
  then
    info "Create project use Laravel or Lumen."
    info "Syntax: web:new -[h]"
    info "Follow the convention and select option which framework do you use."
    info "options: 1. Laravel or 2. Lumen"
    info "Print this Help."
  else
    new_site
  fi
}

create_nginx_virtual_host() {
  cat > ${NGINX_VHOST_LOCATION}/$2 <<EOF
server {
    listen 80;
    listen [::]:80;

    server_name $2.${TLD_DOMAIN};
    set \$base ${PROJECT_LOCATION}/$1;
    root \$base/public;

    index index.html index.htm index.php;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    error_page 404 /index.php;

    location ~ \.php$ {
        include snippets/php_fastcgi.conf;
    }

    # additional config
    include snippets/general.conf;

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
EOF
}

laravel_project() {
    laravel new ${PROJECT_LOCATION}/$1
}

lumen_project() {
    lumen new ${PROJECT_LOCATION}/$1
}

new_site() {
  PS3="Which PHP framework do you want use? "
  select opt in Laravel Lumen
  do
    case $opt in
      Laravel)
        php_framework "laravel";
        break;;
      Lumen)
        php_framework "lumen";
        break;;
      quit)
        break;;
      *)
        error "Invalid option $REPLY";;
    esac
  done
}

php_framework() {
  echo -n "Enter project directory name: "
  read project_dir
  echo -n "Enter project virtual host for Nginx: "
  read project_host

  if [ ! -z "$project_dir" ] && [ ! -z "$project_host" ]
  then
    info "** Create new ${1^} project ${project_dir}"
    $1_project ${project_dir}
    info "** Create virtual host ${BOLD}${project_host}.${TLD_DOMAIN}${RESET}"
    create_nginx_virtual_host ${project_dir} ${project_host}
    info "** Append dns ${BOLD}${project_host}.${TLD_DOMAIN}${RESET} to hosts for local user"
    echo "127.0.0.1   ${project_host}.${TLD_DOMAIN}" | sudo tee -a /etc/hosts >/dev/null
    # info "** Reload Nginx service"
    # nginx -s reload
    info "Done... and you can try to access on browser with url: ${BOLD}${project_host}.${TLD_DOMAIN}${RESET}"
    info "Project location ${PROJECT_LOCATION}/${project_dir}"
  else
    warn "** Please check your input project diectory and vhost."
  fi
}

git_tagging() {
  git tag -a $1 -m "${2}"
  git push origin "$(git symbolic-ref --short HEAD)" $1
}
